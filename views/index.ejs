<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/index.css' />
  </head>
  <body>
    <h1 style="text-align: center;">Node Syntax Parser 1.0</h2>
    <div class="description">
        <p>
            [작동 방식]<br>
            1. 에러 로그를 불러옴(.txt파일)<br>
            2. Preview를 통해 에러를 보여줌<br>
            3. Parsing 버튼을 눌러 에러의 내용을 한글로 변환<br>
            4. Alert 버튼을 눌러 변환된 메시지를 알림해줌.
        </p>
    </div>
    <p style="text-align: center;">아래의 코드를 예제로 진행하였습니다.</p>
    <div class="view-line">
        <p>
            //* UserDefine Start *//<br>
            const userDefine = {<br>
                <br>
            };<br>
            //* UserDefine End *//<br>
            <br>
            isAlive () {<br>
                return false<br>
            }<br>
            <br>
            async run (input) {<br>
                //* Input Start *//<br>
                const $ip = input['ip'];<br>
                const $port = input['port'];<br>
                const $user = input['user'];<br>
                const $pwd = input['pwd'];<br>
                const $file_name = input['file_name'];<br>
                //* Input End *//<br>
                <br>
                <br>
                let cmd = 'cat -b ' + file_name;<br>
                <br>
                let url ='/api/ssh/command';<br>
                <br>
                let data = {<br>
                    ip:$ip,<br>
                    port:$port,<br>
                    user:$user,<br>
                    pwd:$pwd,<br>
                    cmd: cmd,<br>
                }<br>
                <br>
                let h = new HttpClient()<br>
                try {<br>
                    const res = await h.api(url, data)<br>
                    return {<br>
                        result: res.resultData<br>
                    }<br>
                } catch(e) {<br>
                    throw e<br>
                }<br>
            }<br>
        </p>
    </div>
    
    <p style="text-align: center;">CMD Test</p>
    <form id='target' action='cmd'>
        <input id='target_input' name='cmd' type="text">
        <input type="submit" value='submit'>
    </form>

    <form action="/", method="POST">
        <button calss="test" onclick="js:createLog()">Test Button</button>
    </form>

    <form id="display">
        <div>
            <input type="file" id="file_uploads" accept=".txt" multiple>
        </div>
        <div class="preview">
            Preview<br>
        </div>
    </form>

    <div class="parsing_div">
        <button class="parsing" onclick="js:setResult()">Parsing</button>
    </div>

    <div id=result>
        Result<br>
    </div>

    <div class="alert_div">
        <button class="parsing" onclick="js:setAlert()">Alert</button>
    </div>
  </body>
  <script src="/javascripts/error.js"></script>
  <script src="/javascripts/Parsing.js"></script>
  <script src="/javascripts/setData.js"></script>
  <script src="/javascripts/createLog.js"></script>
</html>
